@model WebApp.Model.InvoiceModel

<html>
<head>
    <link href="~/css/invoice.css" type="text/css" rel="stylesheet" />
    <script src="~/scripts/Chart.js" type="text/javascript"></script>
    <script src="~/scripts/utils.js" type="text/javascript"></script>
    <style>
        canvas {
            -moz-user-select: none;
            -webkit-user-select: none;
            -ms-user-select: none;
        }
    </style>
</head>
<body>
    <div class="cover-page">
        <img src="~/img/cover.jpg" />
    </div>
    
    <div style='page-break-before: always;'></div>
    <div class="invoice-box">
        <table cellpadding="0" cellspacing="0">
            <tr class="top">
                <td colspan="2">
                    <table>
                        <tr>
                            <td class="title">
                                <img src="~/img/logo.png" style="width:100%; max-width:300px;" />
                            </td>
                            <td>
                                Invoice #: @Model.Number
                                <br> Created: @DateTime.Now.ToShortDateString()
                                <br> Due: @DateTime.Now.AddDays(20).ToShortDateString()
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
            <tr class="information ">
                <td colspan="2 ">
                    <table>
                        <tr>
                            <td>
                                @Model.Seller.Name<br>
                                @Model.Seller.Road<br>
                                @Model.Seller.Country
                            </td>
                            <td>
                                @Model.Buyer.Name<br>
                                @Model.Buyer.Road<br>
                                @Model.Buyer.Country
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
            <tr class="heading ">
                <td>
                    Item
                </td>
                <td>
                    Price
                </td>
            </tr>

            @foreach (var item in Model.Items)
            {
                <tr class="item">
                    <td>
                        @item.Name
                    </td>
                    <td>
                        $ @item.Price
                    </td>
                </tr>
            }

            <tr class="total ">
                <td></td>
                <td>
                    Total: @Model.Items.Sum(i => i.Price)
                </td>
            </tr>
        </table>
        <div style='page-break-before: always;'></div>
        <img src="~/img/banner.jpg" />
        <div style="width: 75%">
            <canvas id="canvas"></canvas>
        </div>
    </div>


    <script>
        var barChartData = {
            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
            datasets: [{
                label: 'Dataset 1',
                backgroundColor: window.chartColors.red,
                data: [
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor()
                ]
            }, {
                label: 'Dataset 2',
                backgroundColor: window.chartColors.blue,
                data: [
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor()
                ]
            }, {
                label: 'Dataset 3',
                backgroundColor: window.chartColors.green,
                data: [
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor()
                ]
            }]

        };
        window.onload = function () {
            var ctx = document.getElementById('canvas').getContext('2d');
            window.myBar = new Chart(ctx, {
                type: 'bar',
                data: barChartData,
                options: {
                    title: {
                        display: true,
                        text: 'Chart.js Bar Chart - Stacked'
                    },
                    tooltips: {
                        mode: 'index',
                        intersect: false
                    },
                    responsive: true,
                    scales: {
                        xAxes: [{
                            stacked: true,
                        }],
                        yAxes: [{
                            stacked: true
                        }]
                    }
                }
            });
        };


    </script>
</body>
</html>
